name: CI

on: [push, pull_request, workflow_dispatch]

jobs:
  appimage-build:
    runs-on: ubuntu-20.04
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get install -y \
            qtbase5-dev qttools5-dev-tools -y qttools5-dev-tools qttools5-dev qtdeclarative5-dev libqt5svg5-dev \
            qml-module-qtquick2 qml-module-qtquick-controls2 qml-module-qtquick-layouts qml-module-qtquick-window2 \
            libssl-dev libcurl4-gnutls-dev libarchive-dev zlib1g-dev liblzma-dev libgnutls28-dev \
            git cmake gcc g++ wget

      - uses: actions/checkout@v3
        with:
          submodules: recursive
          # fetch complete Git history to make git describe work
          fetch-depth: 0

      - name: Build AppImage
        run: |
          wget https://github.com/TheAssassin/appimagecraft/releases/download/continuous/appimagecraft-x86_64.AppImage
          chmod +x appimagecraft-x86_64.AppImage
          ./appimagecraft-x86_64.AppImage

      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: AppImage
          path: |
            Raspberry_Pi_Imager*.AppImage*

  upload:
    name: Create release and upload artifacts
    needs:
      - appimage-build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Inspect directory after downloading artifacts
        run: ls -alFR
      - name: Create release and upload artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            wget -q https://github.com/TheAssassin/pyuploadtool/releases/download/continuous/pyuploadtool-x86_64.AppImage
            chmod +x pyuploadtool-x86_64.AppImage
            ./pyuploadtool-x86_64.AppImage **/Raspberry_Pi_Imager*.AppImage*
